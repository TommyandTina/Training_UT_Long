; This is the comment
[PATH]
; TODO: Current support is just 1 excel file.
; InputPath             = "D:\\01_Repo\\dev-xos2-repo\\xOS2\\06_Unit_Test\\10_IMR\\00_Driver\\00_Specification\\IMRDRV_xOS2_V3X_unit_test_specification - Copy-OT2.xlsx" 
; InputPath             = "D:\\01_Repo\\dev-xos2-repo\\xOS2\\06_Unit_Test\\10_IMR\\00_Driver\\00_Specification\\IMRDRV_xOS2_V3X_unit_test_specification - Copy-H.xlsx"
; InputPath             = "D:\\01_Repo\\a155\\trunk\\xOS3.0_IMPPAPDSP_common\\06_Unit_Test\\01_Test_Specification\\06_IMR\\IMRDRV_xOS3_V4H_unit_test_specification.xlsx"
; InputPath             = "D:\\01_Repo\\impimr-document-traceability\\10_Work_Product_xOS2_V3U\\06_Unit_Test\\10_IMR\\00_Driver\\00_Specification\\IMRD_V3MV3H_x20_D_UnitTestSpecification.xlsx"
InputPath             = "C:\\Users\\tructrungnguyen\\Desktop\\xOS3_IMRDRV_UnitTestSpecification.xlsx"

; Parent directory/ Base folder
; Ex: ${Workspace}/ut_framework
OutputPath            = "C:\\Users\\tructrungnguyen\\Desktop\\imr"

[TARGET_OF_TESTING]
; Finding sheet contain test data (depend on prj)
TargetModule          = "imr_basic_devctl_api"
FindByPrefix          = False
Prefix                = ['']
SheetNameContainData  = [
						; 'r_imrdrv_devctl_init',
						; 'ut_2_devctl_init',
						; 'r_imrdrv_devctl_check_ch',
						; 'r_imrdrv_devctl_quit',
						; 'ut_2_devctl_quit',
						; 'r_imrdrv_devctl_reset_reg',
						; 'r_imrdrv_devctl_io_create',
						; 'r_imrdrv_devctl_write_reg',
						; 'r_imrdrv_devctl_read_reg',
						; 'r_imrdrv_devctl_io_destroy',
						; 'r_imrdrv_devctl_mask_irq',
						; 'r_imrdrv_devctl_chk_stride',
						;'r_imrdrv_devctl_chk_color_form',
						; 'r_imrdrv_devctl_chk_tri_mode',
						; 'r_imrdrv_devctl_chk_comb_form',
						;'r_imrdrv_devctl_chk_comb_rs',
						; 'r_imrdrv_devctl_chk_comb_cache',
						; 'r_imrdrv_devctl_chk_comb_filter',
						; 'ut_2_devctl_chk_comb_filter',
						; 'r_imrdrv_devctl_chk_comb_map' ,
						; 'r_imrdrv_devctl_write_attr_reg',
						; 'r_imrdrv_devctl_clear_opt_attr',
						; 'r_imrdrv_devctl_get_ch_no',
						; 'r_imrdrv_devctl_set_rs',
						; 'r_imrdrv_devctl_set_cache',
						; 'r_imrdrv_devctl_modify_uv_set',
						; 'r_imrdrv_devctl_set_sync',
						; 'r_imrdrv_devctl_set_mipmap',
						; 'r_imrdrv_devctl_check_write_reg',
						; 'r_imrdrv_devctl_chk_w_reg_cmn',
						; 'r_imrdrv_devctl_chk_w_reg_rs',
						; 'r_imrdrv_devctl_check_read_reg',
						; 'r_imrdrv_devctl_chk_r_reg_cmn',
						; 'r_imrdrv_devctl_get_reg_val',
						; 'r_imrdrv_devctl_get_attr_reg',
						 'r_imrdrv_devctl_get_tri_reg',
						; 'r_imrdrv_devctl_get_tri_val_cmn',
						; 'r_imrdrv_devctl_get_tri_val_dev',
						; 'ut_2_devctl_get_src_dst_reg_v3h',
						; 'ut_2_devctl_get_src_dst_reg_v3m2',
						; 'ut_devctl_get_cmrcr_v3h',
						; 'ut_devctl_get_cmrcr_v3m2',
						; 'r_imrdrv_devctl_get_cmrcr_bpp',
						; 'r_imrdrv_devctl_get_cmrcr_form',
						; 'r_imrdrv_devctl_get_yuv_reg',

						; 'r_imrdrv_devctl_get_int_yuv_val',
						; 'ut_2_devctl_get_int_yuv_val',
						; 'r_imrdrv_devctl_chk_int_yuv_swp',
						; 'r_imrdrv_devctl_get_src_reg',
						; 'r_imrdrv_devctl_get_dst_reg',
						; 'r_imrdrv_devctl_chk_img_data',
						; 'r_imrdrv_devctl_get_dl_reg',
						; 'ut_devctl_get_rs_reg_v3h1',
						; 'ut_devctl_get_rs_reg_v3h2',
						; 'ut_devctl_get_rscr_v3h1',
						; 'ut_devctl_get_rscr_v3h2',
						; 'ut_devctl_get_rscr_v4h',
						; 'r_imrdrv_devctl_get_rsofr',
						; 'r_imrdrv_devctl_get_rs_addr_str',
						; 'ut_2_devctl_get_rs_str_unt',
						; 'r_imrdrv_devctl_get_rs_addr_reg',
						; 'r_imrdrv_devctl_get_rs_addr_unt',
						; 'ut_2_devctl_get_rs_addr_unt',
						; 'r_imrdrv_devctl_get_rs_stride',
						; 'r_imrdrv_devctl_get_rs_str_unt',
						; 'r_imrdrv_devctl_get_rs_align',
						; 'r_imrdrv_devctl_get_cache_reg',
						; 'r_imrdrv_devctl_get_sync_reg',
						; 'r_imrdrv_devctl_get_synccr_reg',
						; 'ut_2_devctl_get_synccr_reg',
						; 'r_imrdrv_devctl_decide_sync_val',
						; 'r_imrdrv_devctl_get_sync_idx',
						; 'r_imrdrv_devctl_get_mipmap_reg',
						; 'ut_2_devctl_get_mipmap_reg',
						; 'r_imrdrv_devctl_get_mipmap_num',
						; 'r_imrdrv_devctl_get_maxlod_val',
						; 'r_imrdrv_devctl_chk_mipmap_unit',
						; 'ut_devctl_update_val_ofs_v3h1',
						; 'ut_devctl_update_val_ofs_v3h2',
						; 'ut_devctl_update_val_ofs_v3m2',
						; 'ut_devctl_update_val_ofs_v4h',
						; 'ut_devctl_set_attr_reg_v3h1',
						; 'ut_devctl_set_attr_reg_v3h2',
						; 'ut_devctl_set_attr_reg_v3m2',
						; 'r_imrdrv_devctl_chk_filter_off',
						; 'r_imrdrv_devctl_chk_filter_on',
						; 'r_imrdrv_devctl_chk_shfval',
						; 'r_imrdrv_devctl_chk_flt_enable',
						; 'r_imrdrv_devctl_chk_flt_on_bpp',
						; 'r_imrdrv_devctl_chk_flt_off_bpp',
						; 'r_imrdrv_devctl_chk_comb_mipmap' ,
						; 'r_imrdrv_devctl_read_back',
						; 'r_imrdrv_devctl_chk_unsup_attr',
						; 'r_imrdrv_devctl_modify_uv_data',
						;'r_imrdrv_devctl_chk_rs_size',
						;'r_imrdrv_devctl_chk_rs_color',
						;'r_imrdrv_devctl_chk_bpp',
						; 'r_imrdrv_devctl_chk_map_enable',
						]

; Test code configuration
[DATA_TYPE]
ListPointerType  = ['osal_mutex_handle_t','p_imrdrv_callback_func_t','imrdrv_ctrl_handle_t','p_osal_isr_func_t','osal_device_handle_t']

[SPECIAL_STRING]
NOT_NULL_VALUE 		= "not null"
NULL_VALUE 			= "null"
NOT_STUB_VALUE 		= "not stub"
NOT_CHANGE_VALUE    = "not change"

[OUTPUT_GENERATION_CONTROL]
;Flag EnableImportData is enable, it will import data from INIT_ADDR_DATA, user need to create key INIT_ADDR_DATA for inialized data.
;Flag EnableTestCode is enable when the user want to generate Test code
;Flag EnableTestData is enable when the user want to generate Test data
EnableImportData = True
EnableTestCode = True
EnableTestData = True
EnableFileGenerate = False

; Key INIT_ADDR_DATA to identify input data from file config if module is used by Semi auto tool.
; 
INIT_ADDR_DATA = {
	"": ["", ["", ""], ["", ""]],
	"": ["", ["", ""] ],
	}

[VALIDATOR]
;Key TABLE_VALIDATOR to identify marco Validator following type expected value in PCL.
;For a example, R_IMPFW_ERRORCODE is a type in PCL Framework, and convert to marco TEST_VALIDATOR_RETCODE
;With this marco TEST_VALIDATOR_RETCODE, it needs to implement function to check marco in Framework Tool.
TABLE_VALIDATOR_BY_TYPE = {
	"e_imrdrv_errorcode_t" 			: "TEST_VALIDATOR_IMR_RETCODE",
	"e_imrdrv_state_t" 				: "TEST_VALIDATOR_IMR_STATE",
	"osal_milli_sec_t"				: "TEST_VALIDATOR_OSAL_MILLI_SEC",
	"e_imrdrv_channelno_t"			: "TEST_VALIDATOR_IMR_CHANNEL",
    "e_osal_interrupt_priority_t"   : "TEST_VALIDATOR_OSAL_IRQ_PRIORITY",
	"e_imrdrv_proc_type_t"			: "TEST_VALIDATOR_IMR_PROC_TYPE",
	"e_imrdrv_osal_pm_cmd_t"		: "TEST_VALIDATOR_CONTROL_CMD",
	'e_imrdrv_color_format_t'		: "TEST_VALIDATOR_COLOR_FORMAT",
	'e_imrdrv_register_type_t'		: "TEST_VALIDATOR_REGISTER_TYPE",
	"e_imrdrv_scaling_down_filter_t": "TEST_VALIDATOR_IMRDRV_SCALE_DOWN_FILT",
	"e_imrdrv_rounding_mode_t"		: "TEST_VALIDATOR_IMRDRV_ROUND_MODE",
	"e_imrdrv_cache_mode_t"			: "TEST_VALIDATOR_CACHE_MODE",
	"e_imrdrv_double_cache_mode_t"	: "TEST_VALIDATOR_DOUBLE_CACHE_MODE",
	"e_imrdrv_bpp_t"				: "TEST_VALIDATOR_IMRDRV_BPP",
	"e_imrdrv_rotate_mode_t"		: "TEST_VALIDATOR_ROTATE_MODE",
	"e_imrdrv_sync_module_t"		: "TEST_VALIDATOR_SYNC_MODULE",
	"e_imrdrv_syncc_no_t"			: "TEST_VALIDATOR_SYNCC_NO",
	"e_imrdrv_map_max_level_t"		: "TEST_VALIDATOR_MAP_MAX_LEVEL",
	"bool"							: "TEST_VALIDATOR_BOOLVALUE",
    }

TABLE_VALIDATOR_BY_NAME = {
	"p_proc_index"               	: "TEST_VALIDATOR_IMR_PROC",
	"state" 					 	: "TEST_VALIDATOR_ADDR",
	"irq_channel"					: "IMRDRV_OSAL_IRQ_CHANNEL_NUM",
	"p_mask_value"					: "TEST_VALIDATOR_REGISTER_MASK",
	"valid_rs_idx"					: "TEST_VALIDATOR_VALID_IDX",
    }

[COMPARE]
LogPath = "D:\\Imr_DOCUMENT\\R-CAR_ENVIRONMENT\\rcar-env\\buildUT\\basic_devctl.log"

;Please correct revision with Revision in Test Result.
Revision = "1ac4aee88f"
