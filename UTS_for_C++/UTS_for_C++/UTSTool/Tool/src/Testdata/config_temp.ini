; This is the comment
[PATH]
; Path to Test spec
InputPath             = "D:\\05_IMP_RTOS\\00_repos\\a050\\trunk\\02_Design_Spec\\Reference Document\\UTS_PCL_template.xlsx"
; Path to base folder of test framework
OutputPath            = "D:\\05_IMP_RTOS\\00_repos\\a050\\trunk\\03_PCL\\struct_tmp"

[TARGET_OF_TESTING]
; Indicate the tested module
TargetModule          = "PCL_Template"
; Choose whether to run all sheet with prefix or specified sheets.
; If true, use the data of Prefix.
; Otherwise, use the data of SheetNameContainData
FindByPrefix          = True
; Tool will search for sheet name with prefix and run it.
; Can define single or multiple prefix.
Prefix                = ['PCL_']
; Tool will search for specified sheet name and run it.
; Can define single or multiple sheet name.
SheetNameContainData  = ['PCL_Template']

[DATA_TYPE]
; Use this parameter to indicate which type is a pointer type in tested module.
ListPointerType = ['R_IMPFW_CBFUNC', 'RCVIMPDRV_CBFUNC', 'osal_mq_handle_t' ]

[SPECIAL_STRING]
; This configuration is used for invalid pointer (pointer to NULL)
NULL_VALUE         = "null"
; This configuration is used for valid pointer (pointer to not NULL address)
NOT_NULL_VALUE     = "not null"
; This configuration is used for indicate calling real local function instead of stub function
NOT_STUB_VALUE     = "not stub"
; This configuration is used for indicate output structure is not change after execute test function.
NOT_CHANGE_VALUE   = "not change"

[OUTPUT_GENERATION_CONTROL]
; If enable, it will import data from INIT_ADDR_DATA, user need to create key INIT_ADDR_DATA for initialized data.
EnableImportData = True
; It’s enable when the user want to generate Test code
EnableTestCode = True
; It’s enable when the user want to generate Test data
EnableTestData = True

; Key INIT_ADDR_DATA to identify input data from file config if module is used by Semi auto tool.
INIT_ADDR_DATA = {
    "initializing"        : [    "initialized_R_IMPFW_CTL"    ,     ["test", "g_test"  ]                                          ],
    "running"             : [    "running_R_IMPFW_CTL"        ,     ["test"            ], ["NULL", "core"    ]                    ],
    "enqueue cl"          : [    "enqueue_cl_R_IMPFW_CTL"     ,     ["test"            ], ["NULL", "core"    ]                    ],
    "set que ctl1"        : [    "set_que_ctl1_R_IMPFW_CTL"   ,     ["test"            ], ["NULL", "target"  ], ["0", "core_id"]  ],
    "set que ctl2"        : [    "set_que_ctl2_R_IMPFW_CTL"   ,     ["test"            ], ["NULL", "target"  ], ["0", "core_id"]  ],
    }

[VALIDATOR]
; Value of variables whose type/name defined in this setting will be converted to the corresponding macro (defined in target module).
; TABLE_VALIDATOR_BY_TYPE has higher priority than TABLE_VALIDATOR_BY_NAME.
TABLE_VALIDATOR_BY_TYPE = {
    "ErrorCode"           : "TEST_VALIDATOR_RETCODE",
    "R_IMPFW_CORE_TYPE"   : "TEST_VALIDATOR_CORE_TYPE"
    }

TABLE_VALIDATOR_BY_NAME = {
    "state"               : "TEST_VALIDATOR_STATE",
    }
