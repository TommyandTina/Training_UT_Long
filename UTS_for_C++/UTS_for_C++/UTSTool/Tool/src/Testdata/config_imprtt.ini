; This is the comment
[PATH]
; TODO: Current support is just 1 excel file.
InputPath             = "D:\\Prj\\05_IMR\\a050\\trunk\\03_PCL\\01_IMP\\02_RTT\\IMP_RTT_V3H_Unit_Test_Specification.xlsx"

; Parent directory/ Base folder
; Ex: ${Workspace}/ut_framework
OutputPath            = "D:\\Prj\\05_IMR\\a050b_master\\ut_framework"

[TARGET_OF_TESTING]
; Finding sheet contain test data (depend on prj)
TargetModule          = "imp_rtt"
FindByPrefix          = False
Prefix                = ['rcv']
SheetNameContainData  = [\
						;'rcvrtt_ChkPMDomainCHECK' \
						;'rcvrtt_reg_write', \
						;'rcvrtt_reg_read', \
						;'rcvrtt_get_internalinfo', \
						;'rcvrtt_get_internalinfo_const', \
						;'rcvrtt_open_resource', \
						;'rcvrtt_close_resource', \
						;'rcvrtt_init_thread', \
						;'rcvrtt_deinit_thread', \
						;'rcvrtt_create_queue', \
						;'rcvrtt_delete_queue', \
						;'rcvrtt_create_mutex', \
						;'rcvrtt_delete_mutex', \
						;'rcvrtt_open_device', \
						'rcvrtt_close_device', \
						;'rcvrtt_runtime_test', \
						;'rcvrtt_event_push', \
						;'rcvrtt_event_wait', \
						;'rcvrtt_FieldBistFinish', \
						;'rcvrtt_TransferFinish', \
						;'rcvrtt_datatransfer_test', \
						;'rcvrtt_osdep_MutexLock', \
						;'rcvrtt_osdep_MutexUnlock', \
						;'rcvrtt_CfgRegCheckDist', \
						;;'rcvrtt_threadLoop_REQUEST', \
						;;'rcvrtt_threadLoop_FINISH_CB', \
						;;'rcvrtt_threadLoop_FINISH', \
						;;'rcvrtt_threadLoop_FINISHError', \
						;'rcvrtt_threadLoop', \
						;'rcvrtt_getRttSts', \
						;'rcvrtt_initialize_edc', \
						;'rcvrtt_findFirstSet', \
						;'rcvrtt_memset', \
						;'rcvrtt_set_pointer', \
						;'rcvrtt_chk_pointer', \
						;'rcvrtt_set_value', \
						;'rcvrtt_chk_value', \
						;'rcvrtt_set_checksum', \
						;'rcvrtt_chk_checksum', \
						;'rcvUsr_imprtt_CacheFlush', \
						;'rcvUsr_imprtt_CacheInvalidate', \
						;'rcvUsr_imprtt_WorkBuffer'\
						]

; Define type is function pointer
[DATA_TYPE]
ListPointerType 		= [
		'osal_mq_handle_t',
		'osal_device_handle_t',
		'osal_thread_handle_t',
		'osal_mutex_handle_t',
		'RCVIMPRTT_CBFUNC',
		]

[SPECIAL_STRING]
NOT_NULL_VALUE 		= "not null"
NULL_VALUE 			= "null"
NOT_STUB_VALUE 		= "not stub"
NOT_CHANGE_VALUE    = "not change"

###################################################################################################
################################## Test code configuration ########################################
###################################################################################################
[OUTPUT_GENERATION_CONTROL]
;Flag EnableImportData is enable, it will import data from INIT_ADDR_DATA, user need to create key INIT_ADDR_DATA for inialized data.
;Flag EnableTestCode is enable when the user want to generate Test code
;Flag EnableTestData is enable when the user want to generate Test data
EnableImportData = True
EnableTestCode = True
EnableTestData = True

; Key INIT_ADDR_DATA to identify input data from file config if module is used by Semi auto tool.
INIT_ADDR_DATA = {
	"clear"        : ["clear_RCvIMPRTTCTL",        ["rcvrttctl", "arg"]],
	"initializing" : ["initializing_RCvIMPRTTCTL", ["rcvrttctl", "arg"]],
	"initialized"  : ["initialized_RCvIMPRTTCTL",  ["rcvrttctl", "arg"]],
	"running"      : ["running_RCvIMPRTTCTL",      ["rcvrttctl", "arg"]],
    "completing"   : ["completing_RCvIMPRTTCTL",   ["rcvrttctl", "arg"]],
	"clear rttinfo"        : ["clear_RCvIMPRTT_RTTINFO_T",        ["rttinfo", "info"]],
	"initializing rttinfo" : ["initializing_RCvIMPRTT_RTTINFO_T", ["rttinfo", "info"]],
	"initialized rttinfo"  : ["initialized_RCvIMPRTT_RTTINFO_T",  ["rttinfo", "info"]],
	"running rttinfo"      : ["running_RCvIMPRTT_RTTINFO_T",      ["rttinfo", "info"]],
    "completing rttinfo"   : ["completing_RCvIMPRTT_RTTINFO_T",   ["rttinfo", "info"]],
	"clear queueitem"        : ["clear_RCvIMPRTT_QUEUEITEM_T",        ["queueitem", "item"]],
	"initializing queueitem" : ["initializing_RCvIMPRTT_QUEUEITEM_T", ["queueitem", "item"]],
	"initialized queueitem"  : ["initialized_RCvIMPRTT_QUEUEITEM_T",  ["queueitem", "item"]],
	"running queueitem"      : ["running_RCvIMPRTT_QUEUEITEM_T",      ["queueitem", "item"]],
	}

[VALIDATOR]
;Key TABLE_VALIDATOR to identify marco Validator following type expected value in PCL.
;For a example, RCvDrvErrorCode is a type in PCL Driver, and convert to marco TEST_VALIDATOR_RETCODE
;With this marco TEST_VALIDATOR_RETCODE, it needs to implement function to check marco in Framework Tool.
TABLE_VALIDATOR_BY_TYPE = {
	"RCvRttStatus"          : "TEST_VALIDATOR_RETCODE",
	"RCV_DEV_STATE"			: "TEST_VALIDATOR_STATE",
	"RCVDRV_CB_RET"         : "TEST_VALIDATOR_RETCODE",
    }

TABLE_VALIDATOR_BY_NAME = {
	"state"          : "TEST_VALIDATOR_STATE",
    }
