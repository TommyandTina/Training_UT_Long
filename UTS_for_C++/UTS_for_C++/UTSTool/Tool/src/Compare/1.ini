; This is the comment
[PATH]
; TODO: Current support is just 1 excel file.
InputPath				= "D:\\Workspace\\impimr-traceability\\10_Work_Product_xOS2_V3U\\06_Unit_Test\\00_IMP\\00_Driver\\00_Specification\\IMPDRV_xOS2_V3X_Unit_Test_Specification.xlsx"
; Parent directory/ Base folder
; Ex: ${Workspace}/ut_framework
OutputPath            = "D:\\Workspace\\rcar-env_xOS2\\renesas\\driver\\soc\\platform\\imp\\test\\unit_test\\application\\ut_framework"

[TARGET_OF_TESTING]
; Finding sheet contain test data (depend on prj)
TargetModule          = 'imp'
FindByPrefix          = False
Prefix                = ['R_IMPDRV','impdrv']
SheetNameContainData  = [	
							'R_IMPDRV_Init', \
							'R_IMPDRV_Quit', \
							'R_IMPDRV_AttrInit', \
							'R_IMPDRV_AttrSetCoreMemInit', \
							'R_IMPDRV_Start', \
							'R_IMPDRV_Stop', \
							'R_IMPDRV_AttrSetCoreMap', \
							'R_IMPDRV_AttrSetCl', \
							'R_IMPDRV_AttrSetIrqMask', \
							'R_IMPDRV_SetIrqGroup', \
							'R_IMPDRV_Execute', \
							'R_IMPDRV_ResumeExecution', \
							'R_IMPDRV_SetPMPolicy', \
							'R_IMPDRV_GetPMPolicy', \
							'R_IMPDRV_GetVersion', \
							'impdrv_api_chk_init_data', \
							'impdrv_api_chk_core_info', \
							'impdrv_api_chk_instance_num', \
							'impdrv_api_cnv_error_code', \
							'impdrv_api_cnv_ctrl_handle', \
							'impdrv_genctl_init', \
							'impdrv_genctl_quit', \
							'impdrv_genctl_start', \
							'impdrv_genctl_stop', \
							'impdrv_genctl_execute', \
							'impdrv_genctl_resume_exe', \
							'impdrv_genctl_pm_set_policy', \
							'impdrv_genctl_pm_get_policy', \
							'impdrv_genctl_attr_init', \
							; 'impdrv_genctl_set_mem_init', \
							'impdrv_genctl_set_core_map', \
							'impdrv_genctl_set_cl', \
							'impdrv_genctl_set_irq_mask', \
							'impdrv_genctl_set_irq_group', \
							'impdrv_genctl_chk_core_info', \
							'impdrv_genctl_prologue', \
							'impdrv_genctl_epilogue', \
							'impdrv_cmnctl_init', \
							; 'impdrv_cmnctl_s_mem_init', \
							; 'impdrv_cmnctl_quit', \
							'impdrv_cmnctl_judge_int', \
							'impdrv_cmnctl_mutex_create', \
							'impdrv_cmnctl_mutex_destroy', \
							'impdrv_cmnctl_mutex_lock', \
							'impdrv_cmnctl_mutex_unlock', \
							'impdrv_cmnctl_set_irq_group', \
							'impdrv_cmnctl_get_corectl_func', \
							'impdrv_cmnctl_get_syncc_val', \
							'impdrv_cmnctl_fatal_cb', \
							'impdrv_cmnctl_chk_core_info', \
							'impdrv_cmnctl_chk_instance_num', \
							'impdrv_cmnctl_cnv_int_core_bit', \
							'impdrv_cmnctl_cnv_int_bit_core', \
							'impdrv_cmnctl_execute_no_group', \
							'impdrv_cmnctl_execute_group', \
							'impdrv_osdep_pow_on_imp_top', \
							'impdrv_osdep_pow_off_imp_top', \
							'impdrv_osdep_register_irq', \
							'impdrv_osdep_enable_irq', \
							'impdrv_osdep_disable_irq', \
							'impdrv_osdep_unregister_irq', \
							'impdrv_osdep_write_reg', \
							'impdrv_osdep_read_reg', \
							'impdrv_osdep_mutex_create', \
							'impdrv_osdep_mutex_destroy', \
							'impdrv_osdep_mutex_lock', \
							'impdrv_osdep_mutex_unlock', \
							'impdrv_osdep_dev_open', \
							'impdrv_osdep_dev_close', \
							'impdrv_osdep_pow_on', \
							'impdrv_osdep_pow_off', \
							; 'impdrv_osdep_int_handler', \
							'impdrv_osdep_chk_core_info', \
							'impdrv_osdep_chk_instance_num', \
							'impdrv_osdep_get_irq_channel', \
							'impdrv_osdep_pow_on_imp', \
							'impdrv_osdep_pow_off_imp', \
							'impdrv_osdep_pm_set_policy', \
							'impdrv_osdep_pm_get_policy', 
    						'impdrv_impctl_is_valid_core', \
                            'impdrv_impctl_check_state', \
                            'impdrv_impctl_set_state', \
                            'impdrv_impctl_attr_init', \
                            'impdrv_ocvctl_is_valid_core', \
                            'impdrv_ocvctl_check_state', \
                            'impdrv_ocvctl_set_state', \
                            'impdrv_ocvctl_attr_init', \
                            'impdrv_dmactl_is_valid_core', \
                            'impdrv_dmactl_check_state', \
                            'impdrv_dmactl_set_state', \
                            'impdrv_dmactl_attr_init', \
                            'impdrv_pscctl_is_valid_core', \
                            'impdrv_pscctl_check_state', \
                            'impdrv_pscctl_set_state', \
                            'impdrv_pscctl_attr_init', \
                            'impdrv_cnnctl_is_valid_core', \
                            'impdrv_cnnctl_check_state', \
                            'impdrv_cnnctl_set_state', \
                            'impdrv_cnnctl_attr_init', \
							# Sprint 16
							'impdrv_impctl_init_start', \
							'impdrv_impctl_init_end', \
							'impdrv_impctl_start', \
							'impdrv_impctl_stop', \
							'impdrv_ocvctl_init_start', \
							'impdrv_ocvctl_init_end', \
							'impdrv_ocvctl_start', \
							'impdrv_ocvctl_stop', \
							'impdrv_dmactl_init_start', \
							'impdrv_dmactl_init_end', \
							'impdrv_dmactl_start', \
							'impdrv_dmactl_stop', \
							'impdrv_pscctl_init_start', \
							'impdrv_pscctl_init_end', \
							'impdrv_pscctl_start', \
							'impdrv_pscctl_stop', \
							'impdrv_cnnctl_init_start', \
							'impdrv_cnnctl_init_end', \
							'impdrv_cnnctl_start', \
							'impdrv_cnnctl_stop', \
							
						]

; Define type is function pointer
[DATA_TYPE]
ListPointerType 		= [
							'osal_mq_handle_t', \
							'osal_device_handle_t', \ 
							'osal_mutex_handle_t', \
							'osal_thread_handle_t', \
							'impdrv_ctrl_handle_t', \
							'p_impdrv_cbfunc_fatal_t', \
						]

[SPECIAL_STRING]
NOT_NULL_VALUE 		= 'not null'
NULL_VALUE 			= 'null'
NOT_STUB_VALUE 		= 'not stub'
NOT_CHANGE_VALUE    = 'not change'

###################################################################################################
################################## Test code configuration ########################################
###################################################################################################
[OUTPUT_GENERATION_CONTROL]
;Flag EnableImportData is enable, it will import data from INIT_ADDR_DATA, user need to create key INIT_ADDR_DATA for inialized data.
;Flag EnableTestCode is enable when the user want to generate Test code
;Flag EnableTestData is enable when the user want to generate Test data
EnableImportData = True
EnableTestCode = True
EnableTestData = True

; Key INIT_ADDR_DATA to identify input data from file config if module is used by Semi auto tool.
INIT_ADDR_DATA = {
	'uninit_data'					: [ 'uninit_data_st_impdrv_initdata_t'			, ['p_initdata', 'p_data']],
	'init_data'						: [ 'init_data_st_impdrv_initdata_t'			, ['p_initdata']],
	'null_callback_func'			: [ 'null_callback_func_st_impdrv_initdata_t'	, ['p_initdata']],
	'invalid_core_type_dta'			: [ 'invalid_core_type_dta_st_impdrv_initdata_t', ['p_initdata']],
	'uninit_handle'					: [ 'uninitialized_impdrv_ctrl_handle_t'		, ['handle', 'p_handle', 'p_impdrv_ctl']],
	'init_handle'					: [ 'initialized_impdrv_ctrl_handle_t'			, ['handle', 'p_impdrv_ctl']],
	'ready_handle'					: [ 'ready_impdrv_ctrl_handle_t'				, ['handle', 'p_impdrv_ctl']],
	'exec_handle'					: [	'exec_impdrv_ctrl_handle_t'					, ['handle', 'p_handle', 'p_impdrv_ctl', 'irq_arg']],
	'int_handle'					: [	'int_impdrv_ctrl_handle_t'					, ['handle', 'p_handle', 'p_impdrv_ctl']],
	'init_cl_addr'					: [	'init_cl_addr_impdrv_ctrl_handle_t'			, ['handle', 'p_impdrv_ctl', 'p_impdrv_ctl']],
	'invalid_mutex_period'			: [	'invalid_mutex_period_impdrv_ctrl_handle_t'	, ['handle']],
	'invalid_irq_mask'				: [ 'invalid_irq_mask_impdrv_ctrl_handle_t'		, ['handle', 'p_impdrv_ctl']],
	'uninit_coretypectl'			: [ 'uninitialize_p_coretypectl'				, ['p_coretypectl'], ["NULL", 'core_num']],
	'init_coretypectl'				: [ 'initialize_p_coretypectl'					, ['p_coretypectl'], ["NULL", 'core_num']],
	'init_coretypectl_nullhandle'	: [ 'initialize_p_coretypectl_null_handle'		, ['p_coretypectl'], ["NULL", 'core_num']],
	'init_coretypectl_param_off'	: [ 'initialize_p_coretypectl_param_off'		, ['p_coretypectl'], ["NULL", 'core_num']],
	'ready_coretypectl_param_off'	: [ 'ready_p_coretypectl_param_off'				, ['p_coretypectl'], ["NULL", 'core_num']],
	'ready_coretypectl'				: [ 'ready_p_coretypectl'						, ['p_coretypectl'], ["NULL", 'core_num']],
	}

[VALIDATOR]
;Key TABLE_VALIDATOR to identify marco Validator following type expected value in PCL.
;For a example, RCvDrvErrorCode is a type in PCL Driver, and convert to marco TEST_VALIDATOR_RETCODE
;With this marco TEST_VALIDATOR_RETCODE, it needs to implement function to check marco in Framework Tool.
TABLE_VALIDATOR_BY_TYPE = {
	'e_impdrv_errorcode_t'  : 'TEST_VALIDATOR_IMPDRV_RETCODE',
	'e_impdrv_pm_policy_t'	: 'TEST_VALIDATOR_IMPDRV_POLICY',
	'e_impdrv_param_t'		: 'TEST_VALIDATOR_IMPDRV_PARAM',
	'e_impdrv_state_t'		: 'TEST_VALIDATOR_IMPDRV_STATE', 
    }

TABLE_VALIDATOR_BY_NAME = {
	'major'					: 'TEST_VALIDATOR_VERSION_MAJOR',
	'minor'					: 'TEST_VALIDATOR_VERSION_MINOR',
	'patch'					: 'TEST_VALIDATOR_VERSION_PATCH',
    }

[COMPARE]
LogPath = 'D:\\Workspace\\rcar-env_xOS2\\build_v3u\\rcar-xos\\v2.5.0\\sw\\amd64-gnu-windows\\bin\\imp_unit_test_on_target_v3u_log_sprint15.txt'
Revision = '49da9bf6'
;Please fill your test report sheet
TestReportSheet = "Test_Report"