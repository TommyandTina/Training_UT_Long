diff --git a/build/parts/include/drv/renesas_isr/renesas_isr_handler.h b/build/parts/include/drv/renesas_isr/renesas_isr_handler.h
new file mode 100644
index 0000000..f298858
--- /dev/null
+++ b/build/parts/include/drv/renesas_isr/renesas_isr_handler.h
@@ -0,0 +1,61 @@
+/***********************************************************************************************************************
+* Copyright [2020-2022] Renesas Electronics Corporation and/or its licensors. All Rights Reserved.
+*
+* The contents of this file (the "contents") are proprietary and confidential to Renesas Electronics Corporation
+* and/or its licensors ("Renesas") and subject to statutory and contractual protections.
+*
+* Unless otherwise expressly agreed in writing between Renesas and you: 1) you may not use, copy, modify, distribute,
+* display, or perform the contents; 2) you may not use any name or mark of Renesas for advertising or publicity
+* purposes or in connection with your use of the contents; 3) RENESAS MAKES NO WARRANTY OR REPRESENTATIONS ABOUT THE
+* SUITABILITY OF THE CONTENTS FOR ANY PURPOSE; THE CONTENTS ARE PROVIDED "AS IS" WITHOUT ANY EXPRESS OR IMPLIED
+* WARRANTY, INCLUDING THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND
+* NON-INFRINGEMENT; AND 4) RENESAS SHALL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, OR CONSEQUENTIAL DAMAGES,
+* INCLUDING DAMAGES RESULTING FROM LOSS OF USE, DATA, OR PROJECTS, WHETHER IN AN ACTION OF CONTRACT OR TORT, ARISING
+* OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THE CONTENTS. Third-party contents included in this file may
+* be subject to different terms.
+***********************************************************************************************************************/
+/****************************************************************************
+ISR handler function for GIC problem workaround
+****************************************************************************/
+#ifndef RENESAS_ISR_HANDLER_H
+#define RENESAS_ISR_HANDLER_H
+
+void rcar_pdev_caiplite_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_csi_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_doc_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_dsc_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_dsi_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_du_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_fbc_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_fba01_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_fba02_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_fba03_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_fba04_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_fba05_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_fba06_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_fba07_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_fba08_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_fba09_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_gfx_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_iccom_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_icumx_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_imp_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_imr_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_isp1_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_isp2_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_ivcp1e_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_pap_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_rfso_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_rtdmac0001_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_rtdmac0203_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_vcp4_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_vdsp_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_vin_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_visionip_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_vsp_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_wwdt1_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_wwdt2_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_wwdt3_isr_handler(uint16_t iid, uintptr_t param);
+void rcar_pdev_wwdt4_isr_handler(uint16_t iid, uintptr_t param);
+
+#endif
