#ifndef _FUNCTIONS_H_
#define _FUNCTIONS_H_

#include <stdbool.h>
#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

bool TEST_R_IMPDRV_CRC(const char *category, int32_t no);
bool TEST_R_IMPDRV_GetPMState(const char *category, int32_t no);
bool TEST_impdrv_genctl_pm_get_state(const char *category, int32_t no);
bool TEST_impdrv_osdep_pm_get_policy(const char *category, int32_t no);
bool TEST_impdrv_genctl_chk_state_init(const char *category, int32_t no);
bool TEST_R_IMPDRV_Init(const char *category, int32_t no);
bool TEST_R_IMPDRV_Quit(const char *category, int32_t no);
bool TEST_R_IMPDRV_AttrInit(const char *category, int32_t no);
bool TEST_R_IMPDRV_AttrSetCoreMemInit(const char *category, int32_t no);
bool TEST_R_IMPDRV_Init(const char *category, int32_t no);
bool TEST_R_IMPDRV_Quit(const char *category, int32_t no);
bool TEST_R_IMPDRV_AttrInit(const char *category, int32_t no);
bool TEST_R_IMPDRV_AttrSetCoreMemInit(const char *category, int32_t no);
bool TEST_R_IMPDRV_Start(const char *category, int32_t no);
bool TEST_R_IMPDRV_Stop(const char *category, int32_t no);
bool TEST_R_IMPDRV_AttrSetCoreMap(const char *category, int32_t no);
bool TEST_R_IMPDRV_AttrSetCl(const char *category, int32_t no);
bool TEST_R_IMPDRV_AttrSetIrqMask(const char *category, int32_t no);
bool TEST_R_IMPDRV_SetIrqGroup(const char *category, int32_t no);
bool TEST_R_IMPDRV_Execute(const char *category, int32_t no);
bool TEST_R_IMPDRV_ResumeExecution(const char *category, int32_t no);
bool TEST_R_IMPDRV_SetPMPolicy(const char *category, int32_t no);
bool TEST_R_IMPDRV_GetPMPolicy(const char *category, int32_t no);
bool TEST_R_IMPDRV_GetVersion(const char *category, int32_t no);
bool TEST_R_IMPDRV_RegGetHwInfo(const char *category, int32_t no);
bool TEST_R_IMPDRV_RegRead32(const char *category, int32_t no);
bool TEST_R_IMPDRV_RegWrite32(const char *category, int32_t no);
bool TEST_R_IMPDRV_RegRequired(const char *category, int32_t no);
bool TEST_R_IMPDRV_SetMemProtect(const char *category, int32_t no);
bool TEST_R_IMPDRV_BusIfCheck(const char *category, int32_t no);
bool TEST_R_IMPDRV_ConfRegCheck(const char *category, int32_t no);
bool TEST_R_IMPDRV_ModuleStopCheck(const char *category, int32_t no);
bool TEST_R_IMPDRV_AttrSetDsp(const char *category, int32_t no);
bool TEST_R_IMPDRV_AttrSetClBrkAddr(const char *category, int32_t no);
bool TEST_R_IMPDRV_AttrSetGosubCond(const char *category, int32_t no);
bool TEST_impdrv_api_chk_init_data(const char *category, int32_t no);
bool TEST_impdrv_api_chk_core_info(const char *category, int32_t no);
bool TEST_impdrv_api_chk_instance_num(const char *category, int32_t no);
bool TEST_impdrv_api_cnv_error_code(const char *category, int32_t no);
bool TEST_impdrv_api_cnv_ctrl_handle(const char *category, int32_t no);
bool TEST_impdrv_api_chk_bus_if_check(const char *category, int32_t no);
bool TEST_impdrv_api_chk_conf_reg_check(const char *category, int32_t no);

bool TEST_impdrv_genctl_init(const char *category, int32_t no);
bool TEST_impdrv_genctl_quit(const char *category, int32_t no);
bool TEST_impdrv_impctl_pm_get_state(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_pm_get_state(const char *category, int32_t no);
bool TEST_impdrv_dmactl_pm_get_state(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_pm_get_state(const char *category, int32_t no);
bool TEST_impdrv_pscctl_pm_get_state(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_pm_get_state(const char *category, int32_t no);
bool TEST_impdrv_dspctl_pm_get_state(const char *category, int32_t no);
bool TEST_impdrv_osdep_pm_get_state(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_quit(const char *category, int32_t no);
bool TEST_impdrv_dmactl_quit(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_quit(const char *category, int32_t no);
bool TEST_impdrv_impctl_quit(const char *category, int32_t no);
bool TEST_impdrv_impctl_quit(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_quit(const char *category, int32_t no);
bool TEST_impdrv_pscctl_quit(const char *category, int32_t no);
bool TEST_impdrv_osdep_dev_open_imp(const char *category, int32_t no);
bool TEST_impdrv_osdep_dev_open_dsp(const char *category, int32_t no);
bool TEST_impdrv_impctl_init_end(const char *category, int32_t no);
bool TEST_impdrv_pscctl_init_end(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_init_end(const char *category, int32_t no);
bool TEST_impdrv_genctl_start(const char *category, int32_t no);
bool TEST_impdrv_genctl_stop(const char *category, int32_t no);
bool TEST_impdrv_genctl_execute(const char *category, int32_t no);
bool TEST_impdrv_genctl_resume_exe(const char *category, int32_t no);
bool TEST_impdrv_genctl_pm_set_policy(const char *category, int32_t no);
bool TEST_impdrv_genctl_pm_get_policy(const char *category, int32_t no);
bool TEST_impdrv_genctl_attr_init(const char *category, int32_t no);
bool TEST_impdrv_genctl_set_core_mem_init(const char *category, int32_t no);
bool TEST_impdrv_genctl_set_core_map(const char *category, int32_t no);
bool TEST_impdrv_genctl_set_cl(const char *category, int32_t no);
bool TEST_impdrv_genctl_set_irq_mask(const char *category, int32_t no);
bool TEST_impdrv_genctl_set_irq_group(const char *category, int32_t no);
bool TEST_impdrv_genctl_int_handler(const char *category, int32_t no);
bool TEST_impdrv_genctl_reg_set_mem_prote(const char *category, int32_t no);
bool TEST_impdrv_genctl_reg_get_hw_info(const char *category, int32_t no);
bool TEST_impdrv_genctl_reg_read32(const char *category, int32_t no);
bool TEST_impdrv_genctl_reg_write32(const char *category, int32_t no);
bool TEST_impdrv_genctl_reg_required(const char *category, int32_t no);
bool TEST_impdrv_genctl_check_intclear(const char *category, int32_t no);
bool TEST_impdrv_genctl_bus_if_check(const char *category, int32_t no);
bool TEST_impdrv_genctl_conf_reg_check(const char *category, int32_t no);
bool TEST_impdrv_genctl_set_dsp(const char *category, int32_t no);
bool TEST_impdrv_genctl_chk_core_info(const char *category, int32_t no);
bool TEST_impdrv_genctl_prologue(const char *category, int32_t no);
bool TEST_impdrv_genctl_epilogue(const char *category, int32_t no);
bool TEST_impdrv_genctl_chk_state_init(const char *category, int32_t no);
bool TEST_impdrv_genctl_chk_state_uninit(const char *category, int32_t no);
bool TEST_impdrv_genctl_core_init(const char *category, int32_t no);
bool TEST_impdrv_genctl_init_get_func(const char *category, int32_t no);
bool TEST_impdrv_genctl_init_chk_state(const char *category, int32_t no);
bool TEST_impdrv_genctl_init_set_state(const char *category, int32_t no);
bool TEST_impdrv_genctl_init_attr_init(const char *category, int32_t no);
bool TEST_impdrv_genctl_dsp_int_handler(const char *category, int32_t no);
bool TEST_impdrv_genctl_set_cl_brk_addr(const char *category, int32_t no);

bool TEST_impdrv_cmnctl_init(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_quit(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_judge_int(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_mutex_create(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_mutex_destroy(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_mutex_lock(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_mutex_unlock(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_set_irq_group(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_get_corectl_func(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_get_syncc_val(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_fatal_cb(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_chk_instance_num(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_get_io_imptop(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_get_io_dta(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_init(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_quit(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_set_mem_prot(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_mem_init(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_get_hw_info(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_read32(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_write32(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_required(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_save_irq_mask(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_force_irq_mask(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_restore_irq_mask(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_conf_reg_check(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_chk_mem_prote(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_chk_core_info(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_cnv_int_core_bit(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_execute_no_group(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_execute_group(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_chk_init_data(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_chk_group_data(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_get_group(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_calc_checksum(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_set_checksum(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_test_checksum(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_hwrsc_open(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_hwrsc_close(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_pow_on_hwrsc(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_pow_off_hwrsc(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_find_resource(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_chk_rsc_name(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_mb_initialize(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_set_checksum(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_test_checksum(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_check_core_busy(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_is_valid_core(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_check_state(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_set_state(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_init_start(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_init_end(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_start(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_stop(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_attr_init(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_set_mem_init(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_set_core_map(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_set_cl(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_set_irq_mask(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_execute(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_int_handler(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_resume_exe(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_pm_set_policy(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_pm_get_policy(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_conf_reg_check(const char *category, int32_t no);
bool TEST_impdrv_dmactl_check_core_busy(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_soft_reset(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_set_syncc_config(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_get_inten_val(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_check_inten(const char *category, int32_t no);
bool TEST_impdrv_cnnctl_int_cb(const char *category, int32_t no);
bool TEST_impdrv_dmactl_is_valid_core(const char *category, int32_t no);
bool TEST_impdrv_dmactl_check_state(const char *category, int32_t no);
bool TEST_impdrv_dmactl_set_state(const char *category, int32_t no);
bool TEST_impdrv_dmactl_init_start(const char *category, int32_t no);
bool TEST_impdrv_dmactl_init_end(const char *category, int32_t no);
bool TEST_impdrv_dmactl_start(const char *category, int32_t no);
bool TEST_impdrv_dmactl_stop(const char *category, int32_t no);
bool TEST_impdrv_dmactl_attr_init(const char *category, int32_t no);
bool TEST_impdrv_dmactl_set_mem_init(const char *category, int32_t no);
bool TEST_impdrv_dmactl_set_core_map(const char *category, int32_t no);
bool TEST_impdrv_dmactl_set_cl(const char *category, int32_t no);
bool TEST_impdrv_dmactl_set_irq_mask(const char *category, int32_t no);
bool TEST_impdrv_dmactl_execute(const char *category, int32_t no);
bool TEST_impdrv_dmactl_int_handler(const char *category, int32_t no);
bool TEST_impdrv_dmactl_resume_exe(const char *category, int32_t no);
bool TEST_impdrv_dmactl_pm_set_policy(const char *category, int32_t no);
bool TEST_impdrv_dmactl_pm_get_policy(const char *category, int32_t no);
bool TEST_impdrv_dmactl_conf_reg_check(const char *category, int32_t no);
bool TEST_impdrv_dmactl_mb_init(const char *category, int32_t no);
bool TEST_impdrv_dmactl_is_sub_thread(const char *category, int32_t no);
bool TEST_impdrv_dmactl_osal_core_num(const char *category, int32_t no);
bool TEST_impdrv_dmactl_read_reg(const char *category, int32_t no);
bool TEST_impdrv_dmactl_write_reg(const char *category, int32_t no);
bool TEST_impdrv_dmactl_init_core(const char *category, int32_t no);
bool TEST_impdrv_dmactl_check_core_busy(const char *category, int32_t no);
bool TEST_impdrv_dmactl_soft_reset(const char *category, int32_t no);
bool TEST_impdrv_dmactl_set_syncc_config(const char *category, int32_t no);
bool TEST_impdrv_dmactl_get_inten_val(const char *category, int32_t no);
bool TEST_impdrv_dmactl_check_inten(const char *category, int32_t no);
bool TEST_impdrv_dmactl_int_cb(const char *category, int32_t no);
bool TEST_impdrv_dmactl_bus_if_check(const char *category, int32_t no);
bool TEST_impdrv_dmactl_cl_pre(const char *category, int32_t no);
bool TEST_impdrv_dmactl_dma_transfer(const char *category, int32_t no);
bool TEST_impdrv_dmactl_int_main_func(const char *category, int32_t no);
bool TEST_impdrv_dmactl_int_safety_func(const char *category, int32_t no);
bool TEST_impdrv_dmactl_mb_init_main(const char *category, int32_t no);
bool TEST_impdrv_dmactl_mb_init_pre(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_is_valid_core(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_check_state(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_set_state(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_init_start(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_init_end(const char *category, int32_t no);
bool TEST_impdrv_dspctl_load_ptcm(const char *category, int32_t no);
bool TEST_impdrv_dspctl_stop_reg(const char *category, int32_t no);
bool TEST_impdrv_dspctl_stop(const char *category, int32_t no);
bool TEST_impdrv_osdep_pow_on_imp_dsp(const char *category, int32_t no);
bool TEST_impdrv_genctl_set_gosub_cond(const char *category, int32_t no);
bool TEST_impdrv_dspctl_dsp_start_pre(const char *category, int32_t no);
bool TEST_impdrv_dspctl_init_end(const char *category, int32_t no);
bool TEST_impdrv_dspctl_dsp_start(const char *category, int32_t no);
bool TEST_impdrv_dspctl_dsp_update_app(const char *category, int32_t no);
bool TEST_impdrv_dspctl_dsp_execute(const char *category, int32_t no);
bool TEST_impdrv_dspctl_quit(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_start(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_stop(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_set_mem_init(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_set_core_map(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_set_cl(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_set_irq_mask(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_execute(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_int_handler(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_resume_exe(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_pm_set_policy(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_pm_get_policy(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_conf_reg_check(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_is_sub_thread(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_osal_core_num(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_read_reg(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_write_reg(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_init_core(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_check_core_busy(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_soft_reset(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_set_syncc_config(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_get_inten_val(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_check_inten(const char *category, int32_t no);
bool TEST_impdrv_dmasctl_int_cb(const char *category, int32_t no);
bool TEST_impdrv_impctl_is_valid_core(const char *category, int32_t no);
bool TEST_impdrv_impctl_check_state(const char *category, int32_t no);
bool TEST_impdrv_impctl_set_state(const char *category, int32_t no);
bool TEST_impdrv_impctl_init_start(const char *category, int32_t no);
bool TEST_impdrv_impctl_init_end(const char *category, int32_t no);
bool TEST_impdrv_impctl_start(const char *category, int32_t no);
bool TEST_impdrv_impctl_stop(const char *category, int32_t no);
bool TEST_impdrv_impctl_attr_init(const char *category, int32_t no);
bool TEST_impdrv_impctl_set_mem_init(const char *category, int32_t no);
bool TEST_impdrv_impctl_set_core_map(const char *category, int32_t no);
bool TEST_impdrv_impctl_set_cl(const char *category, int32_t no);
bool TEST_impdrv_impctl_set_irq_mask(const char *category, int32_t no);
bool TEST_impdrv_impctl_execute(const char *category, int32_t no);
bool TEST_impdrv_impctl_int_handler(const char *category, int32_t no);
bool TEST_impdrv_impctl_resume_exe(const char *category, int32_t no);
bool TEST_impdrv_impctl_pm_set_policy(const char *category, int32_t no);
bool TEST_impdrv_impctl_pm_get_policy(const char *category, int32_t no);
bool TEST_impdrv_impctl_conf_reg_check(const char *category, int32_t no);
bool TEST_impdrv_impctl_init_core(const char *category, int32_t no);
bool TEST_impdrv_impctl_check_core_busy(const char *category, int32_t no);
bool TEST_impdrv_impctl_soft_reset(const char *category, int32_t no);
bool TEST_impdrv_impctl_set_syncc_config(const char *category, int32_t no);
bool TEST_impdrv_impctl_get_inten_val(const char *category, int32_t no);
bool TEST_impdrv_impctl_check_inten(const char *category, int32_t no);
bool TEST_impdrv_impctl_int_cb(const char *category, int32_t no);
bool TEST_impdrv_impctl_bus_if_check(const char *category, int32_t no);
bool TEST_impdrv_impctl_dma_transfer(const char *category, int32_t no);
bool TEST_impdrv_impctl_int_main_func(const char *category, int32_t no);
bool TEST_impdrv_impctl_int_safety_func(const char *category, int32_t no);
bool TEST_impdrv_impctl_tbl_write_reg(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_is_valid_core(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_check_state(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_set_state(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_init_start(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_init_end(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_start(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_stop(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_attr_init(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_set_mem_init(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_set_core_map(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_set_cl(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_execute(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_int_handler(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_resume_exe(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_pm_set_policy(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_pm_get_policy(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_conf_reg_check(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_set_irq_mask(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_init_core(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_check_core_busy(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_soft_reset(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_set_syncc_config(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_irq_status_clear(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_get_inten_val(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_check_inten(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_check_inten_1st(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_check_inten_2nd(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_int_cb(const char *category, int32_t no);
bool TEST_impdrv_ocvctl_init_lwm(const char *category, int32_t no);
bool TEST_impdrv_pscctl_is_valid_core(const char *category, int32_t no);
bool TEST_impdrv_pscctl_check_state(const char *category, int32_t no);
bool TEST_impdrv_pscctl_set_state(const char *category, int32_t no);
bool TEST_impdrv_pscctl_init_start(const char *category, int32_t no);
bool TEST_impdrv_pscctl_start(const char *category, int32_t no);
bool TEST_impdrv_pscctl_stop(const char *category, int32_t no);
bool TEST_impdrv_pscctl_attr_init(const char *category, int32_t no);
bool TEST_impdrv_pscctl_set_mem_init(const char *category, int32_t no);
bool TEST_impdrv_pscctl_set_core_map(const char *category, int32_t no);
bool TEST_impdrv_pscctl_set_cl(const char *category, int32_t no);
bool TEST_impdrv_pscctl_set_irq_mask(const char *category, int32_t no);
bool TEST_impdrv_pscctl_int_handler(const char *category, int32_t no);
bool TEST_impdrv_pscctl_resume_exe(const char *category, int32_t no);
bool TEST_impdrv_pscctl_pm_set_policy(const char *category, int32_t no);
bool TEST_impdrv_pscctl_pm_get_policy(const char *category, int32_t no);
bool TEST_impdrv_pscctl_conf_reg_check(const char *category, int32_t no);
bool TEST_impdrv_pscctl_get_inten_val(const char *category, int32_t no);
bool TEST_impdrv_pscctl_check_core_busy(const char *category, int32_t no);
bool TEST_impdrv_pscctl_soft_reset(const char *category, int32_t no);
bool TEST_impdrv_pscctl_set_syncc_config(const char *category, int32_t no);
bool TEST_impdrv_pscctl_int_cb(const char *category, int32_t no);
bool TEST_impdrv_pscctl_check_inten(const char *category, int32_t no);
bool TEST_impdrv_pscctl_execute(const char *category, int32_t no);
bool TEST_impdrv_pscctl_init_end(const char *category, int32_t no);
bool TEST_impdrv_osdep_pow_on_imp_top(const char *category, int32_t no);
bool TEST_impdrv_osdep_pow_off_imp_top(const char *category, int32_t no);
bool TEST_impdrv_osdep_register_irq(const char *category, int32_t no);
bool TEST_impdrv_osdep_enable_irq(const char *category, int32_t no);
bool TEST_impdrv_osdep_disable_irq(const char *category, int32_t no);
bool TEST_impdrv_osdep_unregister_irq(const char *category, int32_t no);
bool TEST_impdrv_osdep_pow_on_imp(const char *category, int32_t no);
bool TEST_impdrv_osdep_pow_off_imp(const char *category, int32_t no);
bool TEST_impdrv_osdep_pm_set_policy(const char *category, int32_t no);
bool TEST_impdrv_osdep_pm_get_policy(const char *category, int32_t no);
bool TEST_impdrv_osdep_write_reg(const char *category, int32_t no);
bool TEST_impdrv_osdep_read_reg(const char *category, int32_t no);
bool TEST_impdrv_osdep_mutex_create(const char *category, int32_t no);
bool TEST_impdrv_osdep_mutex_destroy(const char *category, int32_t no);
bool TEST_impdrv_osdep_mutex_lock(const char *category, int32_t no);
bool TEST_impdrv_osdep_mutex_unlock(const char *category, int32_t no);
bool TEST_impdrv_osdep_reset_core(const char *category, int32_t no);
bool TEST_impdrv_osdep_pow_on_hwrsc(const char *category, int32_t no);
bool TEST_impdrv_osdep_pow_off_hwrsc(const char *category, int32_t no);
bool TEST_impdrv_osdep_memory_barrier(const char *category, int32_t no);
bool TEST_impdrv_osdep_queue_create(const char *category, int32_t no);
bool TEST_impdrv_osdep_queue_destroy(const char *category, int32_t no);
bool TEST_impdrv_osdep_queue_wait_period(const char *category, int32_t no);
bool TEST_impdrv_osdep_queue_send_period(const char *category, int32_t no);
bool TEST_impdrv_osdep_memory_get_size(const char *category, int32_t no);
bool TEST_impdrv_osdep_memory_get_logical(const char *category, int32_t no);
bool TEST_impdrv_osdep_memory_get_physica(const char *category, int32_t no);
bool TEST_impdrv_osdep_memory_cache_flush(const char *category, int32_t no);
bool TEST_impdrv_osdep_memory_cache_clean(const char *category, int32_t no);
bool TEST_impdrv_osdep_memory_data_set(const char *category, int32_t no);
bool TEST_impdrv_osdep_memory_compare(const char *category, int32_t no);
bool TEST_impdrv_osdep_dev_open(const char *category, int32_t no);
bool TEST_impdrv_osdep_dev_close(const char *category, int32_t no);
bool TEST_impdrv_osdep_pow_on(const char *category, int32_t no);
bool TEST_impdrv_osdep_pow_off(const char *category, int32_t no);
bool TEST_impdrv_osdep_int_handler(const char *category, int32_t no);
bool TEST_impdrv_osdep_chk_core_info(const char *category, int32_t no);
bool TEST_impdrv_osdep_chk_instance_num(const char *category, int32_t no);
bool TEST_impdrv_osdep_get_irq_channel(const char *category, int32_t no);
bool TEST_ut_osdep_get_dsp_irq_channel(const char *category, int32_t no);
bool TEST_impdrv_osdep_enable_dsp_irq(const char *category, int32_t no);
bool TEST_impdrv_osdep_dsp0_int_handler(const char *category, int32_t no);
bool TEST_impdrv_osdep_dsp1_int_handler(const char *category, int32_t no);
bool TEST_impdrv_osdep_dsp2_int_handler(const char *category, int32_t no);
bool TEST_impdrv_osdep_dsp3_int_handler(const char *category, int32_t no);
bool TEST_impdrv_osdep_disable_dsp_irq(const char *category, int32_t no);
bool TEST_impdrv_osdep_dev_open_dsp_sub(const char *category, int32_t no);
bool TEST_impdrv_dspctl_attr_init(const char *category, int32_t no);
bool TEST_impdrv_dspctl_check_state(const char *category, int32_t no);
bool TEST_impdrv_dspctl_chk_execute_data(const char *category, int32_t no);
bool TEST_impdrv_dspctl_chk_int_data(const char *category, int32_t no);
bool TEST_impdrv_dspctl_conf_reg_check(const char *category, int32_t no);
bool TEST_impdrv_dspctl_dsp_execute_pre(const char *category, int32_t no);
bool TEST_impdrv_dspctl_dsp_foece_standby(const char *category, int32_t no);
bool TEST_impdrv_dspctl_dsp_standby(const char *category, int32_t no);
bool TEST_impdrv_dspctl_get_device_io(const char *category, int32_t no);
bool TEST_impdrv_dspctl_init_core(const char *category, int32_t no);
bool TEST_impdrv_dspctl_init_dsp(const char *category, int32_t no);
bool TEST_impdrv_dspctl_init_start(const char *category, int32_t no);
bool TEST_impdrv_dspctl_int_handler(const char *category, int32_t no);
bool TEST_impdrv_dspctl_is_valid_core(const char *category, int32_t no);

bool TEST_impdrv_cmnctl_get_dsp_func(const char *category, int32_t no);
bool TEST_impdrv_genctl_get_worksize(const char *category, int32_t no);

bool TEST_impdrv_dspctl_set_state(const char *category, int32_t no);
bool TEST_impdrv_dspctl_set_mem_init(const char *category, int32_t no);
bool TEST_ut_cmnctl_reg_spm_wait_init(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_spm_preset(const char *category, int32_t no);
bool TEST_ut_cmnctl_reg_spm_initialize(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_get_handle(const char *category, int32_t no);
bool TEST_impdrv_cmnctl_reg_spm_chk_init(const char *category, int32_t no);
bool TEST_ut_cmnctl_reg_spm_ena_access(const char *category, int32_t no);
bool TEST_impdrv_udefctl_udef_crc(const char *category, int32_t no);
#if !defined(IMPDRV_DSPCRC_DETECT_ADDDEF) 
bool TEST_impdrv_dspctl_crc_sub(const char *category, int32_t no);
#else
bool TEST_impdrv_dspctl_crc_sub_macro(const char *category, int32_t no);
#endif
bool TEST_impdrv_udefctl_set_ecm(const char *category, int32_t no);

#ifdef __cplusplus
}
#endif
#endif
